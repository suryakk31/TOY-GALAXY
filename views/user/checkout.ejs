<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Checkout Page</title>
    <link rel="stylesheet" href="/css/user/checkout.css">
    <link href='https://unpkg.com/boxicons@2.1.4/css/boxicons.min.css' rel='stylesheet'>
  <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
    <style>
  
    </style>
</head>
<body>
    
  <%- include('../partials/header') %>
      

        <main class="main-content">
            <div class="checkout-section">

                <div id="delivery-address-section" class="section">
                    <div class="section-header">
                        <div>
                            <h3>DELIVERY ADDRESS</h3>
                        </div>
                        <div class="change-link" id="change-address-link" onclick="showSection('delivery-address-section')">Change</div>
                    </div>
                    <div class="step-content active"> <!-- Active by default -->
                        <% addresses.forEach((address, index) => { %>
                            <div class="address-info">
                                <input type="radio" name="address" id="address<%= index + 1 %>" value="<%=address._id%>" <%= index === 0 ? 'checked' : '' %>>
                                <label for="address<%= index + 1 %>">
                                    <span><%= address.name %></span><br>
                                    <span><%= address.address %>, <%= address.locality %>, <%= address.city %>, <%= address.state %> - <%= address.pincode %></span><br>
                                    <span><%= address.phone %></span>
                                </label>
                            </div>
                            
                        <% }); %>
                        
                        <form id="address-form" class="address-form" >

                            <label for="name">Name:</label>
                            <input type="text" id="name" name="name" required>
                  
                            <label for="address">Address:</label>
                            <input type="text" id="address" name="address" required>
                  
                            <label for="phone">Phone:</label>
                            <input type="text" id="phone" name="phone" required>
                  
                            <label for="locality">Locality:</label>
                            <input type="text" id="locality" name="locality" required>
                  
                            <label for="pincode">Pincode:</label>
                            <input type="text" id="pincode" name="pincode" required>
                  
                            <label for="state">State:</label>
                            <input type="text" id="state" name="state" required>
                  
                            
                            <label for="city">city:</label>
                            <input type="text" id="city" name="city" required>
                            
                     
                            
                            <button class="btn-primary" type="button" id="saveAddressBtn">SAVE ADDRESS  </button>
                            <button class="btn-primary" type="button" onclick="toggleAddressForm()">CANCEL</button>
                        </form>
                        
                        <a href="#" class="btn-primary" id="add-new-address" onclick="showNewAddressForm()">+ Add  new address</a>
                        <button class="btn-primary1" type="button" onclick="DeliverHere()"> DELIVER HERE</button>
                    </div>
                </div>


                <div id="order-summary-section" class="section">
                    <div class="section-header">
                        <h3>ORDER SUMMARY</h3>
                        <div class="change-link" onclick="showSection('order-summary-section')">Change</div>
                    </div>
                    <div class="step-content">
                        <% if (cartItems.length === 0) { %>
                            <p>Your cart is empty.</p>
                        <% } else { %>
                            <% cartItems.forEach(item => { %>
                                <div class="order-item" style="display: flex; justify-content: space-between; margin-bottom: 15px;">
                                    <div class="order-item-image" style="flex: 1;">
                                        <img src="<%= item.productId.image[0] %>" alt="Product Image" style="width: 100px; height: auto;">
                                    </div>
                                    <div class="order-item-details" style="flex: 3; padding-left: 15px;">
                                        <div>
                                            <h4 style="margin: 0; font-size: 16px;"><%= item.productId.name %></h4>
                                            <br>
                                            <h4 style="margin: 0; font-size: 16px;"><%= item.productId.category.name %></h4>
                                            <br>
                                            <h4 style="margin: 0; font-size: 16px;"><%= item.productId.description %></h4>
                                            <br>
                                            <h4 style="margin: 0; font-size: 16px;"> Quantity :<%= item.quantity%></h4>
                
                                     
                                        
                                            <p style="margin: 5px 0; font-size: 14px;"><span style="text-decoration: line-through; color: gray;"><%= item.productId.originalPrice %>
                                        
                                        </div>
                                       
                                    </div>
                                    <div class="order-item-actions" style="flex: 1; text-align: right;">
                                      
                                        
                                    </div>
                                </div>
                            <% }) %>
                        <% } %>
                        <div style="display: flex; justify-content: flex-end; margin-top: 20px;">
                            <button id="place-order-btn" class="btn-primary3" type="button" onclick="placeOrder()">PLACE ORDER</button>
                       
                        </div>
                    </div>
                    
                </div>
                


                 <!-- Payment Options Section -->
                 <div id="payment-options-section" class="section">
                    <div class="section-header">
                        <div>
                            <h3>PAYMENT OPTIONS</h3>
                        </div>
                        <div class="change-link" id="change-payment-link" onclick="showSection('payment-options-section')">Change</div>
                    </div>
                    <div class="step-content">
                        <form action="#">
                            <div class="payment-method">
                                <input type="radio" name="paymentMethod" id="cod" value="Cash on delivery">
                                <label for="cod">Cash on delivery</label>

                                <input type="radio" name="paymentMethod" id="razor" value="Online payment">
                                <label for="cod">Online payment</label>
                            </div>
                        </form>
                        <button class="btn-primary" type="button" onclick="handlePaymentSelection()">CONTINUE</button>
                    </div>
                </div>

             <!-- Order Summary Section -->


               
            </div>

              

            

                  <div class="price-details-container">
                <aside class="price-details">
                    <h3>PRICE DETAILS</h3>
                    <ul>
                      <li> Total price<span>₹<%= originalTotal %></span></li>
                      <li>Category Offer <span>-₹<%= categoryOffer || '0.00' %></span></li>
                     
                      <li class="coupon-discount">Coupon Discount <span>-₹0</span></li>
                    
                      
                    
                    <li>Delivery Fee <span><%= deliveryFeeDisplay %></span></li>
                      <li>Total Payable: <span id="total-amount">₹<%= total %></span></li>

                  </ul>
                  <div id="couponContainer">
                    <button id="applyCouponBtn" class="apply-coupon-btn" onclick="openCouponModal()">
                      <i class='bx bxs-coupon'></i>
                      Apply Coupon
                    </button>
                    <div id="appliedCouponInfo" style="display: none;">
                      <span id="appliedCouponCode"></span>
                      <span id="appliedCouponDiscount"></span>
                      <button id="removeCouponBtn" onclick="removeCoupon()">Remove</button>
                    </div>
                  </div>
                  
                  <!-- Keep the modal and form as they were before -->
                    
                  
                </aside>
              
              </div>

              <div id="modalOverlay" class="modal-overlay"></div>
              <div id="couponModal" class="modal">
                  <span class="close-btn" onclick="closeModal()">&times;</span>
 
                
                  <form id="couponForm">
                    <label for="couponInput">Enter Coupon Code:</label>
                    <input type="text" id="couponInput" name="couponCode" required>
                    <button type="submit">Submit Coupon</button>
                  </form>
                  
                  <div class="unavailable-coupons">
                    <h3> </h3>
                    <% coupon.forEach(coupon => { %>
                    <div class="coupon">
                        <div class="coupon-code">
                            <i class='bx bx-purchase-tag'></i> <%= coupon.couponCode %>
                        </div>
                        <div class="coupon-title">Get  <%= coupon.discount %> % off</div>
                        <div class="coupon-description"><%= coupon.description %> 
                          <br>
                          add minimum amount ₹ <%= coupon.minAmount %> to get this offer
                          <br>
                          This offer is valid for orders upto ₹ <%= coupon.maxAmount %>
                        </div>
                      
                        <div class="unavailable-message">Valid Till : <%= new Date(coupon.expiryDate).toLocaleDateString() %></div>
                    </div>
                    <% }) %>

                  </div>
               
              </div>


             

          <div id="orderConfirmationModal" class="modal1" style="display: none;">
    <div class="modal-content1" style="text-align: center; padding: 20px; border-radius: 10px; background-color: white; width: 300px; margin: auto;">
        <div class="modal-body1">
            <div style="margin-bottom: 20px;">
             
                <div style="font-size: 50px; color: green; margin-bottom: 20px;">
                    &#10004;
                </div>
            </div>
            <h2>Order Placed Successfully!</h2>
            <p>Your order has been placed.</p>
            <button class="btn-primary" onclick="goToOrdersPage()">Go to My Orders</button>
        </div>
    </div>
</div>

               
                    
                
               
         
            
        </main>
    </div>
       
    <footer>
        <p>&copy; <%= new Date().getFullYear() %>  kids kastle</p>
      </footer>
      
      
   



    <script src="https://checkout.razorpay.com/v1/checkout.js"></script>

    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
<script>



    document.getElementById('saveAddressBtn').addEventListener('click',async function(){
    // Gather form values
    const name = document.getElementById('name').value.trim();
    const address = document.getElementById('address').value.trim();
    const phone = document.getElementById('phone').value.trim();
    const locality = document.getElementById('locality').value.trim();
    const pincode = document.getElementById('pincode').value.trim();
    const state = document.getElementById('state').value.trim();
    const city = document.getElementById('city').value.trim();

    let isValid = true;

    // Name validation
    if (name === '') {
      Swal.fire('Validation Error', 'Name is required.', 'error');
      isValid = false;
    }

    // Address validation
    if (address === '') {
      Swal.fire('Validation Error', 'Address is required.', 'error');
      isValid = false;
    }

    // Phone validation
    const phonePattern = /^[0-9]{10}$/;
    if (!phonePattern.test(phone)) {
      Swal.fire('Validation Error', 'Please enter a valid 10-digit phone number.', 'error');
      isValid = false;
    }

    // Locality validation
    if (locality === '') {
      Swal.fire('Validation Error', 'Locality is required.', 'error');
      isValid = false;
    }

    // Pincode validation
    const pincodePattern = /^[0-9]{6}$/;
    if (!pincodePattern.test(pincode)) {
      Swal.fire('Validation Error', 'Please enter a valid 6-digit pincode.', 'error');
      isValid = false;
    }

    // State validation
    if (state === '') {
      Swal.fire('Validation Error', 'State is required.', 'error');
      isValid = false;
    }

    // City validation
    if (city === '') {
      Swal.fire('Validation Error', 'City is required.', 'error');
      isValid = false;
    }

    
    if (isValid) {
      const formData = {
        name,
        address,
        phone,
        locality,
        pincode,
        state,
        city
      };

      try {
        const response = await fetch('/auth/addAddress', {
          method: 'POST',
          headers: {
            'Content-Type': 'application/json'
          },
          body: JSON.stringify(formData)
        });

        if (response.ok) {
          Swal.fire('Success!', 'Address saved successfully!', 'success').then(() => {
            window.location.reload();
          });
        } else {
          const result = await response.json();
          Swal.fire('Error!', 'Failed to save address: ' + result.message, 'error');
        }
      } catch (error) {
        Swal.fire('Error!', 'An error occurred: ' + error.message, 'error');
      }
    }
  });

    
        function showSection(sectionId) {
            const sections = document.querySelectorAll('.step-content');
            sections.forEach(section => {
                section.classList.remove('active');
            });
            document.getElementById(sectionId).querySelector('.step-content').classList.add('active');
    
            // Ensure the "Add New Address" button remains visible and styled correctly
            const addNewAddress = document.getElementById('add-new-address');
            addNewAddress.style.display = 'block';
            addNewAddress.style.backgroundColor = '#2874f0';
        }
    
        function showNextSection(nextSectionId, changeLinkId) {
            showSection(nextSectionId);
            document.getElementById(changeLinkId).style.display = 'block';
        }
    
        function toggleAddressForm() {
            const form = document.getElementById('address-form');
            const addNewAddress = document.getElementById('add-new-address');
            const isFormVisible = form.style.display === 'block';
    
            if (isFormVisible) {
                form.style.display = 'none';
                addNewAddress.style.display = 'block';
            } else {
                form.style.display = 'block';
                addNewAddress.style.display = 'none';
            }
        }
    
        function showNewAddressForm() {
            // Clear the form fields
            document.getElementById('name').value = '';
            document.getElementById('pincode').value = '';
            document.getElementById('address').value = '';
            document.getElementById('locality').value = '';
            document.getElementById('city').value = '';
            document.getElementById('state').value = '';
            document.getElementById('phone').value = '';
   
            toggleAddressForm();
    
          
            document.getElementById('deliver-here-btn').style.display = 'block';
        }
  
    
        function DeliverHere() {
            showNextSection('order-summary-section', 'change-address-link');
        }


        function handlePaymentSelection() {
    const codOption = document.getElementById('cod');
    const razorOption = document.getElementById('razor');

    let totalAmount = document.getElementById('total-amount').innerText;
    totalAmount = totalAmount.replace('₹', '').trim();  

    if (codOption.checked) {
        Swal.fire({
            title: 'Cash on Delivery Selected',
            text: 'You have chosen to pay on delivery.',
            icon: 'info',
            confirmButtonText: 'Confirm',
            confirmButtonColor: '#4CAF50'
        }).then(() => {
            showSection('order-summary-section');
        });
    } else if (razorOption.checked) {
        fetch('/create-razorpay-order', {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json'
            },
            body: JSON.stringify({
                amount: totalAmount * 100, 
            })
        })
        .then(response => response.json())
        .then(order => {
            var options = {
                "key": order.key_id,
                "amount": order.amount,
                "currency": "INR",
                "name": "Kids Kastle",
                "description": "Toy Purchase",
                "order_id": order.id,
                "handler": function (response) {
                    Swal.fire({
                        title: 'Payment Successful!',
                        text: 'Your order has been placed. Order ID: ' + response.razorpay_payment_id,
                        icon: 'success',
                        confirmButtonText: 'View Order',
                        confirmButtonColor: '#4CAF50'
                    }).then(() => {
                        showSection('order-summary-section');
                    });
                },
                "prefill": {
                    "name": "<%= userDatabase.firstName %> <%= userDatabase.lastName %>",
                    "email": "<%= userDatabase.email %>",
                    "contact": "<%= userDatabase.phoneNumber %>"
                },
                "theme": {
                    "color": "#FF6600"
                }
            };
            var rzp = new Razorpay(options);
            rzp.open();
        })
        .catch(error => {
            console.error('Error creating Razorpay order:', error);
            Swal.fire({
                title: 'Oops!',
                text: 'There was an issue processing your payment. Please try again.',
                icon: 'error',
                confirmButtonText: 'Retry',
                confirmButtonColor: '#FF6600'
            });
        });
    } else {
        Swal.fire({
            title: 'Payment Method Required',
            text: 'Please choose a payment method to continue.',
            icon: 'warning',
            confirmButtonText: 'OK',
            confirmButtonColor: '#FF6600'
        });
    }
}

       
    
        function goToCart() {
            window.location.href = "/auth/cart"; 
        }


        function placeOrder() {

    const orderDetails = {
        address: document.querySelector('input[name="address"]:checked').value,  
        paymentMethod: document.querySelector('input[name="paymentMethod"]:checked').value,
       
    };

  
    fetch('/auth/checkout', {
        method: 'POST',
        headers: {
            'Content-Type': 'application/json'
        },
        body: JSON.stringify(orderDetails)
    })
    .then(response => {
        if (!response.ok) {
            throw new Error('Order placement failed');
        }
        return response.json();
    })
    .then(data => {
        if (data.message) {
            console.log('Order placed successfully:', data.message);
            showOrderConfirmationModal();  
        } else if (data.error) {
            alert(data.error);  
        }
    })
    .catch(error => {
        console.error('Error:', error);
        alert('There was an issue placing your order. Please try again.');
    });
}


    function goToOrdersPage() {
        
        window.location.href = "/auth/order";
    }


    function showOrderConfirmationModal() {
    const modal = document.getElementById('orderConfirmationModal');
    modal.style.display = 'block'; 

    setTimeout(() => {
        modal.style.display = 'block';
    }, 1000);
}







        
 
 
 let appliedCoupon = null;

function openCouponModal() {
  document.getElementById('modalOverlay').style.display = 'block';
  document.getElementById('couponModal').style.display = 'block';
}

function closeModal() {
  document.getElementById('modalOverlay').style.display = 'none';
  document.getElementById('couponModal').style.display = 'none';
}

function updateCouponDisplay() {
  const applyCouponBtn = document.getElementById('applyCouponBtn');
  const appliedCouponInfo = document.getElementById('appliedCouponInfo');
  const appliedCouponCode = document.getElementById('appliedCouponCode');
  const appliedCouponDiscount = document.getElementById('appliedCouponDiscount');

  if (appliedCoupon) {
    applyCouponBtn.style.display = 'none';
    appliedCouponInfo.style.display = 'block';
    appliedCouponCode.textContent = appliedCoupon.couponCode;
    appliedCouponDiscount.textContent = `₹${appliedCoupon.discountAmount.toFixed(2)} OFF`;
  } else {
    applyCouponBtn.style.display = 'block';
    appliedCouponInfo.style.display = 'none';
  }
}

function removeCoupon() {
  appliedCoupon = null;
  localStorage.removeItem('coupon');
  updateCouponDisplay();
  
  const originalTotal = parseFloat(localStorage.getItem('originalTotal'));
  document.querySelector('#total-amount').innerText = `₹${originalTotal.toFixed(2)}`;
  document.querySelector('.coupon-discount span').innerText = '-₹0.00';
}

document.getElementById('couponForm').addEventListener('submit', function(e) {
  e.preventDefault(); 

  const couponCode = document.getElementById('couponInput').value;
  const totalAmount = parseFloat(document.querySelector('#total-amount').innerText.replace('₹', ''));

  fetch('/validateCoupon', {
    method: 'POST',
    headers: { 'Content-Type': 'application/json' },
    body: JSON.stringify({ couponCode, totalAmount })
  })
  .then(response => response.json())
  .then(data => {
    if (data.isValid) {
      const { discount, discountAmount, minAmount, maxAmount } = data;

      appliedCoupon = {
        couponCode,
        discount,
        discountAmount,
        newTotal: totalAmount - discountAmount
      };

      localStorage.setItem('coupon', JSON.stringify(appliedCoupon));
      localStorage.setItem('originalTotal', totalAmount);

      document.querySelector('.coupon-discount span').innerText = `-₹${discountAmount.toFixed(2)}`;
      document.querySelector('#total-amount').innerText = `₹${appliedCoupon.newTotal.toFixed(2)}`;

      updateCouponDisplay();
      closeModal();
    } else {
      alert(data.message);
    }
  })
  .catch(err => {
    console.error('Error:', err);
    alert('An error occurred while validating the coupon. Please try again.');
  });
});

window.addEventListener('load', function() {
  const storedCoupon = localStorage.getItem('coupon');

  if (storedCoupon) {
    appliedCoupon = JSON.parse(storedCoupon);
    const originalTotal = parseFloat(localStorage.getItem('originalTotal'));

    document.querySelector('.coupon-discount span').innerText = `-₹${appliedCoupon.discountAmount.toFixed(2)}`;
    document.querySelector('#total-amount').innerText = `₹${appliedCoupon.newTotal.toFixed(2)}`;

    updateCouponDisplay();
  }
});

// Initialize coupon display on page load
updateCouponDisplay();


</script>

    
    
</body>
</html>
