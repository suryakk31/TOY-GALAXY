<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Checkout Page</title>
    <link rel="stylesheet" href="/css/user/checkout.css">
    <link href='https://unpkg.com/boxicons@2.1.4/css/boxicons.min.css' rel='stylesheet'>
  <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
    <style>
  
    </style>
</head>
<body>
   
<nav class="navbar">
    <ul class="navbar-menu">
      <li><a href="<%= isLoggedIn ? '/auth/homepage' : '/' %>">Home</a></li>
      <li class="dropdown">
        <a href="<%= isLoggedIn ? '/auth/homepage' : '/' %>">Categories</a>
        <ul class="dropdown-menu">
          <% categories.forEach(category => { %>
            <li><a href="/category/<%= category._id %>"><%= category.name %></a></li>
          <% }) %>
        </ul>
      </li>
      <li><a href="<%= isLoggedIn ? '/auth/shop' : '/shop' %>">Shop</a></li>
      <li><a href="<%= isLoggedIn ? '/auth/blog' : '/blog' %>">Blog</a></li>
    </ul>
    <div class="logo">
      <i class='bx bxs-castle'></i><h1>Kids Kastle</h1>
    </div>
    <div class="navbar-right">
      <div class="navbar-search">
        <input type="text" placeholder="Search...">
        <button type="submit"><i class="bx bx-search"></i></button>
      </div>
      <div class="navbar-icons">
        <a href="<%= isLoggedIn ? 'javascript:void(0);' : '/auth/login' %>" id="user-icon"><i class="bx bx-user"></i></a>
        <% if (isLoggedIn && userDatabase) { %>
          <div class="user-info" id="user-info" style="display: none;">
            <a href="/auth/profile"><p>Hello, <%= userDatabase.firstName %></p></a>
            <a href="/auth/logout" id="logout-button">Log out</a>
          </div>
        <% } %>
        <a href="<%= isLoggedIn ? '/auth/wishlist' : '/wishlist' %>"><i class="bx bx-heart"></i></a>
        <a href="<%= isLoggedIn ? '/auth/cart' : '/cart' %>"><i class="bx bx-cart"></i></a>
      </div>
    </div>
  </nav>
        </header>

        <main class="main-content">
            <div class="checkout-section">

                <!-- Delivery Address Section -->
                <div id="delivery-address-section" class="section">
                    <div class="section-header">
                        <div>
                            <h3>DELIVERY ADDRESS</h3>
                        </div>
                        <div class="change-link" id="change-address-link" onclick="showSection('delivery-address-section')">Change</div>
                    </div>
                    <div class="step-content active"> <!-- Active by default -->
                        <% addresses.forEach((address, index) => { %>
                            <div class="address-info">
                                <input type="radio" name="address" id="address<%= index + 1 %>" value="<%=address._id%>" <%= index === 0 ? 'checked' : '' %>>
                                <label for="address<%= index + 1 %>">
                                    <span><%= address.name %></span><br>
                                    <span><%= address.address %>, <%= address.locality %>, <%= address.city %>, <%= address.state %> - <%= address.pincode %></span><br>
                                    <span><%= address.phone %></span>
                                </label>
                            </div>
                            
                        <% }); %>
                        
                        <form id="address-form" class="address-form" >

                            <label for="name">Name:</label>
                            <input type="text" id="name" name="name" required>
                  
                            <label for="address">Address:</label>
                            <input type="text" id="address" name="address" required>
                  
                            <label for="phone">Phone:</label>
                            <input type="text" id="phone" name="phone" required>
                  
                            <label for="locality">Locality:</label>
                            <input type="text" id="locality" name="locality" required>
                  
                            <label for="pincode">Pincode:</label>
                            <input type="text" id="pincode" name="pincode" required>
                  
                            <label for="state">State:</label>
                            <input type="text" id="state" name="state" required>
                  
                            
                            <label for="city">city:</label>
                            <input type="text" id="city" name="city" required>
                            
                     
                            
                            <button class="btn-primary" type="button" id="saveAddressBtn">SAVE ADDRESS  </button>
                            <button class="btn-primary" type="button" onclick="toggleAddressForm()">CANCEL</button>
                        </form>
                        
                        <a href="#" class="btn-primary" id="add-new-address" onclick="showNewAddressForm()">+ Add  new address</a>
                        <button class="btn-primary1" type="button" onclick="DeliverHere()"> DELIVER HERE</button>
                    </div>
                </div>


                 <!-- Payment Options Section -->
                 <div id="payment-options-section" class="section">
                    <div class="section-header">
                        <div>
                            <h3>PAYMENT OPTIONS</h3>
                        </div>
                        <div class="change-link" id="change-payment-link" onclick="showSection('payment-options-section')">Change</div>
                    </div>
                    <div class="step-content">
                        <form action="#">
                            <div class="payment-method">
                                <input type="radio" name="paymentMethod" id="cod" value="Cash on delivery">
                                <label for="cod">Cash on delivery</label>

                                <input type="radio" name="paymentMethod" id="razor" value="Online payment">
                                <label for="cod">Online payment</label>
                            </div>
                        </form>
                        <button class="btn-primary" type="button" onclick="handlePaymentSelection()">CONTINUE</button>
                    </div>
                </div>

             <!-- Order Summary Section -->
<div id="order-summary-section" class="section">
    <div class="section-header">
        <h3>ORDER SUMMARY</h3>
        <div class="change-link" onclick="showSection('order-summary-section')">Change</div>
    </div>
    <div class="step-content">
        <% if (cartItems.length === 0) { %>
            <p>Your cart is empty.</p>
        <% } else { %>
            <% cartItems.forEach(item => { %>
                <div class="order-item" style="display: flex; justify-content: space-between; margin-bottom: 15px;">
                    <div class="order-item-image" style="flex: 1;">
                        <img src="<%= item.productId.image[0] %>" alt="Product Image" style="width: 100px; height: auto;">
                    </div>
                    <div class="order-item-details" style="flex: 3; padding-left: 15px;">
                        <div>
                            <h4 style="margin: 0; font-size: 16px;"><%= item.productId.name %></h4>
                            <br>
                            <h4 style="margin: 0; font-size: 16px;"><%= item.productId.category.name %></h4>
                            <br>
                            <h4 style="margin: 0; font-size: 16px;"><%= item.productId.description %></h4>
                            <br>
                            <h4 style="margin: 0; font-size: 16px;"> Quantity :<%= item.quantity%></h4>

                     
                        
                            <p style="margin: 5px 0; font-size: 14px;"><span style="text-decoration: line-through; color: gray;"><%= item.productId.originalPrice %>
                        
                        </div>
                       
                    </div>
                    <div class="order-item-actions" style="flex: 1; text-align: right;">
                      
                        
                    </div>
                </div>
            <% }) %>
        <% } %>
        <div style="display: flex; justify-content: flex-end; margin-top: 20px;">
            <button id="place-order-btn" class="btn-primary3" type="button" onclick="placeOrder()">PLACE ORDER</button>
            <button class="btn-primary4" type="button" onclick="goToCart()" style="margin-left: 10px;">GO TO CART</button>
        </div>
    </div>
    
</div>


               
            </div>

              

            

                  <div class="price-details-container">
                <aside class="price-details">
                    <h3>PRICE DETAILS</h3>
                    <ul>
                      <li> Total price<span>₹<%= originalTotal %></span></li>
                      <li>Category Offer <span>-₹<%= categoryOffer || '0.00' %></span></li>
                     
                      <li class="coupon-discount">Coupon Discount <span>-₹0</span></li>
                    
                      
                    
                    
                      <li>Delivery Fee <span>₹<%= deliveryFee %></span></li>
                      <li>Total Payable: <span id="total-amount">₹<%= total %></span></li>

                  </ul>
                    <button class="apply-coupon-btn" onclick="applyCoupon()">
                      <i class='bx bxs-coupon'></i>
                      Apply Coupon
                  </button>
                    
                  
                </aside>
              
              </div>

              <div id="modalOverlay" class="modal-overlay"></div>
              <div id="couponModal" class="modal">
                  <span class="close-btn" onclick="closeModal()">&times;</span>
 
                
                  <form id="couponForm">
                    <label for="couponInput">Enter Coupon Code:</label>
                    <input type="text" id="couponInput" name="couponCode" required>
                    <button type="submit">Submit Coupon</button>
                  </form>
                  
                  <div class="unavailable-coupons">
                    <h3> </h3>
                    <% coupon.forEach(coupon => { %>
                    <div class="coupon">
                        <div class="coupon-code">
                            <i class='bx bx-purchase-tag'></i> <%= coupon.couponCode %>
                        </div>
                        <div class="coupon-title">Get  <%= coupon.discount %> % off</div>
                        <div class="coupon-description"><%= coupon.description %> 
                          <br>
                          add minimum amount ₹ <%= coupon.minAmount %> to get this offer</div>
                      
                        <div class="unavailable-message">Valid Till : <%= new Date(coupon.expiryDate).toLocaleDateString() %></div>
                    </div>
                    <% }) %>

                  </div>
               
              </div>


             

          <div id="orderConfirmationModal" class="modal1" style="display: none;">
    <div class="modal-content1" style="text-align: center; padding: 20px; border-radius: 10px; background-color: white; width: 300px; margin: auto;">
        <div class="modal-body1">
            <div style="margin-bottom: 20px;">
             
                <div style="font-size: 50px; color: green; margin-bottom: 20px;">
                    &#10004;
                </div>
            </div>
            <h2>Order Placed Successfully!</h2>
            <p>Your order has been placed.</p>
            <button class="btn-primary" onclick="goToOrdersPage()">Go to My Orders</button>
        </div>
    </div>
</div>

               
                    
                
               
         
            
        </main>

        <footer class="footer">
            <span>© 2024 KidsKastle.com</span>
        </footer>
    </div>
    <script src="https://checkout.razorpay.com/v1/checkout.js"></script>

    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
<script>



    document.getElementById('saveAddressBtn').addEventListener('click',async function(){
    // Gather form values
    const name = document.getElementById('name').value.trim();
    const address = document.getElementById('address').value.trim();
    const phone = document.getElementById('phone').value.trim();
    const locality = document.getElementById('locality').value.trim();
    const pincode = document.getElementById('pincode').value.trim();
    const state = document.getElementById('state').value.trim();
    const city = document.getElementById('city').value.trim();

    let isValid = true;

    // Name validation
    if (name === '') {
      Swal.fire('Validation Error', 'Name is required.', 'error');
      isValid = false;
    }

    // Address validation
    if (address === '') {
      Swal.fire('Validation Error', 'Address is required.', 'error');
      isValid = false;
    }

    // Phone validation
    const phonePattern = /^[0-9]{10}$/;
    if (!phonePattern.test(phone)) {
      Swal.fire('Validation Error', 'Please enter a valid 10-digit phone number.', 'error');
      isValid = false;
    }

    // Locality validation
    if (locality === '') {
      Swal.fire('Validation Error', 'Locality is required.', 'error');
      isValid = false;
    }

    // Pincode validation
    const pincodePattern = /^[0-9]{6}$/;
    if (!pincodePattern.test(pincode)) {
      Swal.fire('Validation Error', 'Please enter a valid 6-digit pincode.', 'error');
      isValid = false;
    }

    // State validation
    if (state === '') {
      Swal.fire('Validation Error', 'State is required.', 'error');
      isValid = false;
    }

    // City validation
    if (city === '') {
      Swal.fire('Validation Error', 'City is required.', 'error');
      isValid = false;
    }

    
    if (isValid) {
      const formData = {
        name,
        address,
        phone,
        locality,
        pincode,
        state,
        city
      };

      try {
        const response = await fetch('/auth/addAddress', {
          method: 'POST',
          headers: {
            'Content-Type': 'application/json'
          },
          body: JSON.stringify(formData)
        });

        if (response.ok) {
          Swal.fire('Success!', 'Address saved successfully!', 'success').then(() => {
            window.location.reload();
          });
        } else {
          const result = await response.json();
          Swal.fire('Error!', 'Failed to save address: ' + result.message, 'error');
        }
      } catch (error) {
        Swal.fire('Error!', 'An error occurred: ' + error.message, 'error');
      }
    }
  });

    </script>

    <script>
        function showSection(sectionId) {
            const sections = document.querySelectorAll('.step-content');
            sections.forEach(section => {
                section.classList.remove('active');
            });
            document.getElementById(sectionId).querySelector('.step-content').classList.add('active');
    
            // Ensure the "Add New Address" button remains visible and styled correctly
            const addNewAddress = document.getElementById('add-new-address');
            addNewAddress.style.display = 'block';
            addNewAddress.style.backgroundColor = '#2874f0';
        }
    
        function showNextSection(nextSectionId, changeLinkId) {
            showSection(nextSectionId);
            document.getElementById(changeLinkId).style.display = 'block';
        }
    
        function toggleAddressForm() {
            const form = document.getElementById('address-form');
            const addNewAddress = document.getElementById('add-new-address');
            const isFormVisible = form.style.display === 'block';
    
            if (isFormVisible) {
                form.style.display = 'none';
                addNewAddress.style.display = 'block';
            } else {
                form.style.display = 'block';
                addNewAddress.style.display = 'none';
            }
        }
    
        function showNewAddressForm() {
            // Clear the form fields
            document.getElementById('name').value = '';
            document.getElementById('pincode').value = '';
            document.getElementById('address').value = '';
            document.getElementById('locality').value = '';
            document.getElementById('city').value = '';
            document.getElementById('state').value = '';
            document.getElementById('phone').value = '';
   
            toggleAddressForm();
    
          
            document.getElementById('deliver-here-btn').style.display = 'block';
        }
  
    
        function DeliverHere() {
            showNextSection('payment-options-section', 'change-address-link');
        }
        function handlePaymentSelection() {
    const codOption = document.getElementById('cod');
    const razorOption = document.getElementById('razor');


    let totalAmount = document.getElementById('total-amount').innerText;
    totalAmount = totalAmount.replace('₹', '').trim();  

    if (codOption.checked) {
        Swal.fire({
            title: 'Payment Selected',
            text: 'Cash on Delivery is selected.',
            icon: 'info',
            confirmButtonText: 'OK'
        }).then(() => {
            showSection('order-summary-section');
        });
    } else if (razorOption.checked) {
        fetch('/create-razorpay-order', {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json'
            },
            body: JSON.stringify({
                amount: totalAmount * 100, 
            })
        })
        .then(response => response.json())
        .then(order => {
            var options = {
                "key": order.key_id,
                "amount": order.amount,
                "currency": "INR",
                "name": "Your Company Name",
                "description": "Test Transaction",
                "order_id": order.id,
                "handler": function (response) {
                    Swal.fire({
                        title: 'Payment Success',
                        text: 'Payment was successful! Payment ID: ' + response.razorpay_payment_id,
                        icon: 'success',
                        confirmButtonText: 'OK'
                    }).then(() => {
                        showSection('order-summary-section');
                    });
                },
                "prefill": {
                    "name": "Your Name",
                    "email": "your.email@example.com",
                    "contact": "9999999999"
                },
                "theme": {
                    "color": "#3399cc"
                }
            };
            var rzp = new Razorpay(options);
            rzp.open();
        })
        .catch(error => {
            console.error('Error creating Razorpay order:', error);
            Swal.fire({
                title: 'Payment Error',
                text: 'There was an error with the payment. Please try again.',
                icon: 'error',
                confirmButtonText: 'OK'
            });
        });
    } else {
        Swal.fire({
            title: 'No Payment Selected',
            text: 'Please select a payment option to continue.',
            icon: 'warning',
            confirmButtonText: 'OK'
        });
    }
}

       
    
        function goToCart() {
            window.location.href = "/auth/cart"; 
        }


        function placeOrder() {

    const orderDetails = {
        address: document.querySelector('input[name="address"]:checked').value,  
        paymentMethod: document.querySelector('input[name="paymentMethod"]:checked').value,
       
    };

  
    fetch('/auth/checkout', {
        method: 'POST',
        headers: {
            'Content-Type': 'application/json'
        },
        body: JSON.stringify(orderDetails)
    })
    .then(response => {
        if (!response.ok) {
            throw new Error('Order placement failed');
        }
        return response.json();
    })
    .then(data => {
        if (data.message) {
            console.log('Order placed successfully:', data.message);
            showOrderConfirmationModal();  
        } else if (data.error) {
            alert(data.error);  
        }
    })
    .catch(error => {
        console.error('Error:', error);
        alert('There was an issue placing your order. Please try again.');
    });
}


    function goToOrdersPage() {
        
        window.location.href = "/auth/order";
    }


    function showOrderConfirmationModal() {
    const modal = document.getElementById('orderConfirmationModal');
    modal.style.display = 'block'; 

    setTimeout(() => {
        modal.style.display = 'block';
    }, 1000);
}




    document.getElementById('user-icon').addEventListener('click', function(event) {
      <% if (isLoggedIn) { %>
        event.preventDefault();
        var userInfo = document.getElementById('user-info');
        if (userInfo.style.display === 'none' || userInfo.style.display === '') {
          userInfo.style.display = 'block';
        } else {
          userInfo.style.display = 'none';
        }
      <% } %>
    });

    document.getElementById('logout-button').addEventListener('click', function(event) {
      event.preventDefault();
      Swal.fire({
        title: 'Are you sure you want to logout?',
        icon: 'warning',
        showCancelButton: true,
        confirmButtonText: 'Yes, logout',
        cancelButtonText: 'Cancel'
      }).then((result) => {
        if (result.isConfirmed) {
          window.location.href = '/auth/logout';
        }
      });
    });



    function applyCoupon() {
            document.body.classList.add('blur');
            document.getElementById('modalOverlay').style.display = 'block';
            document.getElementById('couponModal').style.display = 'block';
        }

        function closeModal() {
            document.body.classList.remove('blur');
            document.getElementById('modalOverlay').style.display = 'none';
            document.getElementById('couponModal').style.display = 'none';
        }

        
    </script>

<!-- <script>
  document.getElementById('couponForm').addEventListener('submit', function(e) {
    e.preventDefault(); 

    const couponCode = document.getElementById('couponInput').value;

    fetch('/validateCoupon', {
      method: 'POST',
      headers: { 'Content-Type': 'application/json' },
      body: JSON.stringify({ couponCode: couponCode })
    })
    .then(response => response.json())
    .then(data => {
      if (data.isValid) {
        const discount = data.discount;
        const minAmount = data.minAmount;
        const originalTotal = parseFloat(document.querySelector('#total-amount').innerText.replace('₹', ''));

        if (originalTotal >= minAmount) {
          const discountAmount = (discount / 100) * originalTotal;
          const newTotal = originalTotal - discountAmount;

     
          localStorage.setItem('coupon', JSON.stringify({
            couponCode: couponCode,
            discount: discountAmount,
            newTotal: newTotal
          }));

          document.querySelector('.coupon-discount span').innerText = `-₹${discountAmount.toFixed(2)}`;
          document.querySelector('#total-amount').innerText = `₹${newTotal.toFixed(2)}`;
        } else {
          alert(`The minimum amount to apply this coupon is ₹${minAmount}.`);
        }
      } else {
        alert('Invalid coupon code.');
      }
    })
    .catch(err => {
      console.error('Error:', err);
    });
  });


  window.addEventListener('load', function() {
    const storedCoupon = localStorage.getItem('coupon');

    if (storedCoupon) {
      const couponData = JSON.parse(storedCoupon);
      const originalTotal = parseFloat(document.querySelector('#total-amount').innerText.replace('₹', ''));


      document.querySelector('.coupon-discount span').innerText = `-₹${couponData.discount.toFixed(2)}`;
      document.querySelector('#total-amount').innerText = `₹${couponData.newTotal.toFixed(2)}`;
    }
  });
</script> -->

    
    
</body>
</html>
